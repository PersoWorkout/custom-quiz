// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id String @id @default(cuid())
  firstname String
  lastname String
  email String
  password String
  token String?
  expired_at DateTime?
  created_at DateTime @default(now())
  updated_at DateTime?

  participation QuizzesParticipants[]

  quizzes Quizzes[]
}

model QuizzesParticipants {
  id String @id @default(cuid())
  user_id String 
  quiz_id String 

  quiz Quizzes @relation(fields: [quiz_id], references: [id], onDelete: Cascade)
  user Users @relation(fields: [user_id], references: [id], onDelete: Cascade)
  responses ParticipantsResponses[]
}

model Quizzes {
  id String @id @default(cuid())
  title String
  description String
  user_id String
  created_at DateTime @default(now())
  expired_at DateTime?

  participants QuizzesParticipants[]
  questions Questions[]

  user Users @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Questions{
  id String @id @default(cuid())
  question String
  quiz_id String 

  quiz Quizzes @relation(fields: [quiz_id], references: [id], onDelete:  Cascade)
  options QuestionsOptions[]
}

model QuestionsOptions {
  id String @id @default(cuid())
  option String
  question_id String
  color String?
  is_correct Boolean

  question Questions @relation(fields: [question_id], references: [id], onDelete: Cascade)
  participants ParticipantsResponses[]
}

model ParticipantsResponses {
  question_option_id String @unique
  participant_id String @unique

  question_option QuestionsOptions @relation(fields: [question_option_id], references: [id])
  participants QuizzesParticipants @relation(fields: [participant_id], references: [id])

  @@id([question_option_id, participant_id])
}





